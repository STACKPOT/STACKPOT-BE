services:
  spring:
    container_name: spring
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env
    environment:
      TZ: Asia/Seoul
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      JWT_SECRET: ${JWT_SECRET}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_USERNAME: ${MAIL_USERNAME}
      PASSWORD: ${PASSWORD}
      URL: ${URL}
      OPEN_API_KEY: ${OPEN_API_KEY}
      USERNAME: ${USERNAME}
    depends_on:
      - redis

  redis:
    container_name: redis-container
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PORT=6379
    command: ["redis-server", "--appendonly", "yes"]

  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - spring
    environment:
      TZ: Asia/Seoul
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      JWT_SECRET: "${JWT_SECRET}"
      KAKAO_CLIENT_ID: "${KAKAO_CLIENT_ID}"
      KAKAO_CLIENT_SECRET: "${KAKAO_CLIENT_SECRET}"
      MAIL_PASSWORD: "${MAIL_PASSWORD}"
      MAIL_USERNAME: "${MAIL_USERNAME}"
      PASSWORD: "${PASSWORD}"
      URL: "${URL}"
      OPEN_API_KEY: "${OPEN_API_KEY}"
      USERNAME: "${USERNAME}"
      SERVER_PORT: 80

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  redis_data: