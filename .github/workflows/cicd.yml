name: CI/CD Pipeline

on:
  push:
    branches: [dev]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make application.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Decide Target Version (Blue/Green)
        id: decide
        run: |
          echo "ÌòÑÏû¨ Ïã§Ìñâ Ï§ëÏù∏ Ïª®ÌÖåÏù¥ÎÑà ÌôïÏù∏ Ï§ë..."
          if docker ps --format '{{.Names}}' | grep -q 'stackpot-server-green'; then
            echo "TARGET_VERSION=blue" >> $GITHUB_ENV
          else
            echo "TARGET_VERSION=green" >> $GITHUB_ENV
          fi
    
          # üîµ Docker Build (Blue/Green Î≤ÑÏ†Ñ)
      - name: Build Docker Image
        run: |
          echo "Building Image: ${{ secrets.DOCKERHUB_USERNAME }}/stackpot-server:${{ env.TARGET_VERSION }}"
          :docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/stackpot-server:${{ env.TARGET_VERSION }} .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/stackpot-server:${{ env.TARGET_VERSION }}

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/stackpot
            echo "[INFO] ÏÉàÎ°úÏö¥ Ïù¥ÎØ∏ÏßÄ pull"
            sudo docker-compose pull
            echo "[INFO] Ïª®ÌÖåÏù¥ÎÑà up (detached mode)"
            sudo docker-compose up -d
            echo "[INFO] nginx Ïä§ÏúÑÏπ≠ Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ"
            ./switch_backend.sh