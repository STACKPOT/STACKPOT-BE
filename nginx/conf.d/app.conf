server {
    listen 80 default_server;
    server_name api.stackpot.co.kr www.api.stackpot.co.kr;
       location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }
    # 모든 http(80포트) 요청을 https로 리다이렉팅
    location / {
        return 301 https://$host$request_uri;
    } 
   
    # return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name api.stackpot.co.kr www.api.stackpot.co.kr;

    ssl_certificate /etc/letsencrypt/live/api.stackpot.co.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.stackpot.co.kr/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://spring:8080; # Docker Compose 서비스 이름
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 정책 설정
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, PUT, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Max-Age' 86400;
            return 204;
        }
        add_header 'Access-Control-Allow-Origin' '*';
    }

    location /swagger-ui/ {
        proxy_pass http://spring:8080/swagger-ui/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

